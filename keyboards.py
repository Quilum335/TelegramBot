# keyboards.py - –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
import calendar
from datetime import datetime

def get_main_menu_keyboard(license_info: dict = None):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    keyboard = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—Ü–µ–Ω–∑–∏–∏, –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞
    if license_info:
        if license_info['has_subscription']:
            if license_info['is_trial']:
                keyboard.row(InlineKeyboardButton(
                    text=f"üÜì –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {license_info['days_left']} –¥–Ω–µ–π", 
                    callback_data="buy_license"
                ))
            else:
                keyboard.row(InlineKeyboardButton(
                    text=f"‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è: {license_info['days_left']} –¥–Ω–µ–π", 
                    callback_data="buy_license"
                ))
        else:
            keyboard.row(InlineKeyboardButton(
                text="‚ùå –õ–∏—Ü–µ–Ω–∑–∏—è –∏—Å—Ç–µ–∫–ª–∞", 
                callback_data="buy_license"
            ))
    
    keyboard.row(
        InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–π –ø–æ—Å—Ç", callback_data="create_post")
    )
    keyboard.row(
        InlineKeyboardButton(text="üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∫–∞–Ω–∞–ª", callback_data="link_channel")
    )
    keyboard.row(
        InlineKeyboardButton(text="üë§ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≤—è–∑–∫–æ–π", callback_data="manage_binding")
    )
    keyboard.row(
        InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤", callback_data="list_channels")
    )
    keyboard.row(
        InlineKeyboardButton(text="üìã –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã", callback_data="scheduled_posts")
    )
    keyboard.row(
        InlineKeyboardButton(text="üí≥ –ö—É–ø–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data="buy_license")
    )
    return keyboard.as_markup()

def get_post_type_keyboard():
    """–í—ã–±–æ—Ä —Ç–∏–ø–∞ –ø–æ—Å—Ç–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="‚úçÔ∏è –†—É—á–Ω–æ–π —Ä–µ–∂–∏–º", callback_data="post_manual"),
        InlineKeyboardButton(text="üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º", callback_data="post_auto")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    )
    return keyboard.as_markup()

def get_auto_post_keyboard():
    """–í—ã–±–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üé≤ –†–∞–Ω–¥–æ–º–Ω–æ", callback_data="auto_random"),
        InlineKeyboardButton(text="üîÅ –ü–æ—Ç–æ–∫ —Ä–µ–ø–æ—Å—Ç–æ–≤", callback_data="auto_periodic")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="create_post")
    )
    return keyboard.as_markup()

def get_auto_source_keyboard():
    """–í—ã–±–æ—Ä –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∂–∏–º–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üîó –ò–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤", callback_data="auto_source_linked"),
        InlineKeyboardButton(text="üåê –ò–∑ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –∫–∞–Ω–∞–ª–æ–≤", callback_data="auto_source_public")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="post_auto")
    )
    return keyboard.as_markup()

def get_periodic_source_keyboard():
    """–ü–æ–¥–º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ –¥–ª—è –ø–æ—Ç–æ–∫–∞ —Ä–µ–ø–æ—Å—Ç–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üîó –ò–∑ –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤", callback_data="periodic_source_linked"),
        InlineKeyboardButton(text="üåê –ò–∑ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞", callback_data="periodic_source_public")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="post_auto")
    )
    return keyboard.as_markup()

def get_channel_sort_keyboard():
    """–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –∫–∞–Ω–∞–ª–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üî§ –ü–æ –∞–ª—Ñ–∞–≤–∏—Ç—É", callback_data="sort_alpha")
    )
    keyboard.row(
        InlineKeyboardButton(text="üìä –ü–æ —á–∏—Å–ª—É –ø–æ—Å—Ç–æ–≤", callback_data="sort_posts")
    )
    keyboard.row(
        InlineKeyboardButton(text="üë• –ü–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º", callback_data="sort_subscribers")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    )
    return keyboard.as_markup()

def get_admin_menu_keyboard():
    """–ê–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üë• –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", callback_data="admin_users")],
        [InlineKeyboardButton(text="üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –∞–∫–∫–∞—É–Ω—Ç", callback_data="admin_link_main_account")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="back_to_menu")]
    ])

def get_license_duration_keyboard():
    """–í—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="1 –¥–µ–Ω—å", callback_data="license_1d")
    )
    keyboard.row(
        InlineKeyboardButton(text="7 –¥–Ω–µ–π", callback_data="license_7d")
    )
    keyboard.row(
        InlineKeyboardButton(text="2 –Ω–µ–¥–µ–ª–∏", callback_data="license_14d")
    )
    keyboard.row(
        InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data="license_30d")
    )
    keyboard.row(
        InlineKeyboardButton(text="1 –≥–æ–¥", callback_data="license_365d")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚ôæ –ë–µ—Å—Å—Ä–æ—á–Ω–æ", callback_data="license_forever")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data="license_delete")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_licenses")
    )
    return keyboard.as_markup()

def get_license_duration_keyboard_with_username(username: str):
    """–í—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ª–∏—Ü–µ–Ω–∑–∏–∏ —Å –ø–µ—Ä–µ–¥–∞—á–µ–π username –≤ callback data"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="1 –¥–µ–Ω—å", callback_data=f"license_1d_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="7 –¥–Ω–µ–π", callback_data=f"license_7d_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="2 –Ω–µ–¥–µ–ª–∏", callback_data=f"license_14d_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="1 –º–µ—Å—è—Ü", callback_data=f"license_30d_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="1 –≥–æ–¥", callback_data=f"license_365d_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚ôæ –ë–µ—Å—Å—Ä–æ—á–Ω–æ", callback_data=f"license_forever_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ª–∏—Ü–µ–Ω–∑–∏—é", callback_data=f"license_delete_{username}")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_licenses")
    )
    return keyboard.as_markup()

def get_license_status_keyboard(license_info: dict):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Å—Ç–∞—Ç—É—Å–µ –ª–∏—Ü–µ–Ω–∑–∏–∏"""
    keyboard = InlineKeyboardBuilder()
    
    if license_info['has_subscription']:
        if license_info['is_trial']:
            keyboard.row(InlineKeyboardButton(
                text=f"üÜì –ü—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥: {license_info['days_left']} –¥–Ω–µ–π", 
                callback_data="buy_license"
            ))
        else:
            keyboard.row(InlineKeyboardButton(
                text=f"‚úÖ –õ–∏—Ü–µ–Ω–∑–∏—è: {license_info['days_left']} –¥–Ω–µ–π", 
                callback_data="buy_license"
            ))
    else:
        keyboard.row(InlineKeyboardButton(
            text="‚ùå –õ–∏—Ü–µ–Ω–∑–∏—è –∏—Å—Ç–µ–∫–ª–∞", 
            callback_data="buy_license"
        ))
    
    return keyboard.as_markup()

# –£–¥–∞–ª–µ–Ω—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–∫–æ–π –∞–∫–∫–∞—É–Ω—Ç–æ–≤
def get_manage_binding_keyboard():
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Ä–∞–∑–¥–µ–ª–∞ –£–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–≤—è–∑–∫–æ–π"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="üë• –£–ø—Ä–∞–≤–ª—è—Ç—å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏", callback_data="manage_accounts_menu"))
    keyboard.row(InlineKeyboardButton(text="üì° –£–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–∞–º–∏", callback_data="manage_channels_menu"))
    keyboard.row(InlineKeyboardButton(text="üìù –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ—Å—Ç–∞–º–∏", callback_data="manage_posts_menu"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu"))
    return keyboard.as_markup()

def get_accounts_menu_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="üîó –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data="link_account"))
    keyboard.row(InlineKeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="accounts_list"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_binding"))
    return keyboard.as_markup()

def get_manage_accounts_keyboard(accounts: list[tuple[str, bool]]):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏. –ü–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ø–∏—Å–æ–∫ –ø–∞—Ä (phone, is_main)."""
    keyboard = InlineKeyboardBuilder()
    if accounts:
        for (phone, is_main) in accounts:
            main_label = " (–æ—Å–Ω–æ–≤–Ω–æ–π)" if is_main else ""
            keyboard.row(
                InlineKeyboardButton(text=f"üîó –°–¥–µ–ª–∞—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–º{main_label}", callback_data=f"set_main_{phone}"),
                InlineKeyboardButton(text=f"üóë –û—Ç–≤—è–∑–∞—Ç—å {phone}", callback_data=f"unlink_account_{phone}")
            )
    else:
        keyboard.row(InlineKeyboardButton(text="–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="ignore"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_binding"))
    return keyboard.as_markup()

def get_accounts_list_keyboard(accounts: list[tuple[str]]):
    keyboard = InlineKeyboardBuilder()
    if accounts:
        for (phone,) in accounts:
            keyboard.row(InlineKeyboardButton(text=f"‚ùå –û—Ç–≤—è–∑–∞—Ç—å {phone}", callback_data=f"unlink_account_{phone}"))
    else:
        keyboard.row(InlineKeyboardButton(text="–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="ignore"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_accounts_menu"))
    return keyboard.as_markup()

def get_accounts_for_channels_keyboard(accounts: list[tuple[str]]):
    keyboard = InlineKeyboardBuilder()
    if accounts:
        for (phone,) in accounts:
            keyboard.row(InlineKeyboardButton(text=f"{phone}", callback_data=f"manage_channels_for_{phone}"))
    else:
        keyboard.row(InlineKeyboardButton(text="–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data="ignore"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_binding"))
    return keyboard.as_markup()

def get_manage_channels_for_account_keyboard(phone: str):
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª—ã", callback_data=f"create_channels_for_{phone}"))
    keyboard.row(InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª—ã", callback_data=f"delete_channels_for_{phone}"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_channels_menu"))
    return keyboard.as_markup()

def get_channels_list_keyboard(channels: list[tuple[int, str]], phone: str):
    keyboard = InlineKeyboardBuilder()
    if channels:
        for channel_id, channel_title in channels:
            title = channel_title or str(channel_id)
            keyboard.row(InlineKeyboardButton(text=f"üóë {title}", callback_data=f"delete_channel_{channel_id}_{phone}"))
    else:
        keyboard.row(InlineKeyboardButton(text="–ù–µ—Ç –∫–∞–Ω–∞–ª–æ–≤", callback_data="ignore"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"manage_channels_for_{phone}"))
    return keyboard.as_markup()

def get_manage_posts_keyboard():
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="üìù –°–æ–∑–¥–∞—Ç—å –ø–æ—Å—Ç", callback_data="create_post"))
    keyboard.row(InlineKeyboardButton(text="üìã –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç—ã", callback_data="scheduled_posts"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="manage_binding"))
    return keyboard.as_markup()

def get_channel_name_method_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ", callback_data="channel_generate_one")],
        [InlineKeyboardButton(text="üé≤ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ", callback_data="channel_generate_many")],
        [InlineKeyboardButton(text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data="channel_name_input")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="create_channel_start")]
    ])

def get_post_freshness_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–≤–µ–∂–µ—Å—Ç–∏ –ø–æ—Å—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text=" –î–µ–Ω—å", callback_data="freshness_1")],
        [InlineKeyboardButton(text=" –ù–µ–¥–µ–ª—è", callback_data="freshness_7")],
        [InlineKeyboardButton(text=" 2 –ù–µ–¥–µ–ª–∏", callback_data="freshness_14")],
        [InlineKeyboardButton(text=" –ú–µ—Å—è—Ü", callback_data="freshness_30")],
        [InlineKeyboardButton(text=" 3 –º–µ—Å—è—Ü–∞", callback_data="freshness_90")],
        [InlineKeyboardButton(text=" 6 –º–µ—Å—è—Ü–µ–≤", callback_data="freshness_180")],
        [InlineKeyboardButton(text=" –ì–æ–¥", callback_data="freshness_365")],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_previous")]
    ])

def create_calendar(year: int, month: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞–ª–µ–Ω–¥–∞—Ä—è"""
    keyboard = InlineKeyboardBuilder()
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º
    month_name = calendar.month_name[month]
    keyboard.row(InlineKeyboardButton(text=f"{month_name} {year}", callback_data="ignore"))
    
    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    weekdays = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    keyboard.row(*[InlineKeyboardButton(text=day, callback_data="ignore") for day in weekdays])
    
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å
    cal = calendar.monthcalendar(year, month)
    
    for week in cal:
        row = []
        for day in week:
            if day == 0:
                row.append(InlineKeyboardButton(text=" ", callback_data="ignore"))
            else:
                date_str = f"{year:04d}-{month:02d}-{day:02d}"
                row.append(InlineKeyboardButton(text=str(day), callback_data=f"date_{date_str}"))
        keyboard.row(*row)
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    nav_row = []
    if month > 1:
        prev_month = month - 1
        prev_year = year
    else:
        prev_month = 12
        prev_year = year - 1
    
    if month < 12:
        next_month = month + 1
        next_year = year
    else:
        next_month = 1
        next_year = year + 1
    
    nav_row.append(InlineKeyboardButton(text="‚óÄÔ∏è", callback_data=f"month_{prev_year}_{prev_month}"))
    nav_row.append(InlineKeyboardButton(text="‚ñ∂Ô∏è", callback_data=f"month_{next_year}_{next_month}"))
    keyboard.row(*nav_row)
    
    return keyboard.as_markup()

def get_scheduled_posts_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø–æ—Å—Ç–∞–º–∏"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üìù –ï–¥–∏–Ω–∏—á–Ω—ã–µ –ø–æ—Å—Ç—ã", callback_data="scheduled_posts_single"),
        InlineKeyboardButton(text="üîÑ –ü–æ—Ç–æ–∫–∏ —Ä–µ–ø–æ—Å—Ç–æ–≤", callback_data="scheduled_posts_streams")
    )
    keyboard.row(
        InlineKeyboardButton(text="üé≤ –†–∞–Ω–¥–æ–º–Ω—ã–µ –ø–æ—Å—Ç—ã", callback_data="scheduled_posts_random")
    )
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")
    )
    return keyboard.as_markup()

def get_post_action_keyboard(post_id: int, post_type: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π –¥–ª—è –ø–æ—Å—Ç–∞"""
    keyboard = InlineKeyboardBuilder()
    # –¢–µ–∫—Å—Ç —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–∏–ø–∞
    delete_text = "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏–∏" if post_type in ("random_stream", "random_stream_config") else "‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç"
    actions_row = [InlineKeyboardButton(text=delete_text, callback_data=f"delete_post_{post_type}_{post_id}")]
    # –ö–Ω–æ–ø–∫–∞ —Å–º–µ–Ω—ã –¥–æ–Ω–æ—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤
    actions_row.append(InlineKeyboardButton(text="üîÑ –°–º–µ–Ω–∏—Ç—å –¥–æ–Ω–æ—Ä–∞", callback_data=f"change_donor_{post_type}_{post_id}"))
    keyboard.row(*actions_row)
    keyboard.row(
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="scheduled_posts")
    )
    return keyboard.as_markup()

def get_confirm_delete_keyboard(post_id: int, post_type: str):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"confirm_delete_{post_type}_{post_id}"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"post_action_{post_type}_{post_id}")
    )
    return keyboard.as_markup()

def get_channel_type_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∫–∞–Ω–∞–ª–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üîì –û—Ç–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª", callback_data="channel_type_public"),
        InlineKeyboardButton(text="üîí –ó–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª", callback_data="channel_type_private")
    )
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="create_channel_start"))
    return keyboard.as_markup()

def get_channel_count_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∫–∞–Ω–∞–ª–æ–≤"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="1 –∫–∞–Ω–∞–ª", callback_data="channel_count_1"),
        InlineKeyboardButton(text="5 –∫–∞–Ω–∞–ª–æ–≤", callback_data="channel_count_5"),
        InlineKeyboardButton(text="10 –∫–∞–Ω–∞–ª–æ–≤", callback_data="channel_count_10")
    )
    keyboard.row(
        InlineKeyboardButton(text="15 –∫–∞–Ω–∞–ª–æ–≤", callback_data="channel_count_15"),
        InlineKeyboardButton(text="20 –∫–∞–Ω–∞–ª–æ–≤", callback_data="channel_count_20")
    )
    keyboard.row(InlineKeyboardButton(text="–í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é", callback_data="channel_count_custom"))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="create_channel_start"))
    return keyboard.as_markup()

def get_donor_type_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –¥–æ–Ω–æ—Ä–∞"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="üìã –ü—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã", callback_data="donor_type_linked"),
        InlineKeyboardButton(text="üåê –ü—É–±–ª–∏—á–Ω—ã–µ –∫–∞–Ω–∞–ª—ã", callback_data="donor_type_public")
    )
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="auto_random"))
    return keyboard.as_markup()

def get_donor_count_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ–Ω–æ—Ä–æ–≤: –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="–û–¥–∏–Ω –¥–æ–Ω–æ—Ä", callback_data="donor_count_one"),
        InlineKeyboardButton(text="–ù–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–Ω–æ—Ä–æ–≤", callback_data="donor_count_many"),
    )
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="auto_random"))
    return keyboard.as_markup()

def get_periodic_donor_count_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–æ–Ω–æ—Ä–æ–≤ –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤ (repost streams)"""
    keyboard = InlineKeyboardBuilder()
    keyboard.row(
        InlineKeyboardButton(text="–û–¥–∏–Ω –¥–æ–Ω–æ—Ä", callback_data="periodic_count_one"),
        InlineKeyboardButton(text="–ù–µ—Å–∫–æ–ª—å–∫–æ –¥–æ–Ω–æ—Ä–æ–≤", callback_data="periodic_count_many"),
    )
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="auto_periodic"))
    return keyboard.as_markup()

def get_donors_confirm_keyboard(done_callback: str, back_callback: str):
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data=done_callback))
    keyboard.row(InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=back_callback))
    return keyboard.as_markup()